"use strict";(self.webpackChunkbeb=self.webpackChunkbeb||[]).push([[513],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=s(n),d=a,p=f["".concat(c,".").concat(d)]||f[d]||m[d]||o;return n?r.createElement(p,i(i({ref:t},u),{},{components:n})):r.createElement(p,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4618:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:2},c="The B\u039eB NFT Community (NFTC)",s={unversionedId:"nft",id:"nft",title:"The B\u039eB NFT Community (NFTC)",description:"The B\u039eB Indestructible Community is of the ERC-721 standard, in order to define an interface that is sufficient for an NFT Community (NFTC). A simplified interface is available as follow.",source:"@site/docs/nft.md",sourceDirName:".",slug:"/nft",permalink:"/docs/nft",draft:!1,editUrl:"https://github.com/bebdotxyz/protocol/docs/nft.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/intro"},next:{title:"The B\u039eB Community Protocol",permalink:"/docs/protocol"}},u={},m=[{value:"B\u039eB Names",id:"b\u03beb-names",level:2},{value:"B\u039eB Name Leasing",id:"b\u03beb-name-leasing",level:2}],f={toc:m};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"the-b\u03beb-nft-community-nftc"},"The B\u039eB NFT Community (NFTC)"),(0,o.kt)("p",null,"The B\u039eB Indestructible Community is of the ",(0,o.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-721"},"ERC-721 standard"),", in order to define an interface that is sufficient for an NFT Community (",(0,o.kt)("strong",{parentName:"p"},"NFTC"),"). A simplified interface is available as follow."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"/* Define an interface for a B\u039eB Indestructible Community */\ninterface IBebIndestructibleCommunity extends ERC721, BebNameRegistrar, Ownable {\n  /** Register a controller to the registrar. */\n  /**@require caller to be the owner of the contract. */\n  function addController(address controller) external onlyOwner\n\n  /** Delete a controller from the registrar. */\n  /**@require caller to be the owner of the contract. */\n  function removeController(address controller) external onlyOwner\n\n  /* List of owner of the community */\n  /** @require the token lease to be non-expired at the name registrar level */\n  function ownerOf(uint256 _tokenId) external view returns(address);\n\n  /* Verify if a name already exists. Useful for burning expired names. */\n  function _exist(uint256 _tokenId) internal returns(uint256);\n\n  /** Get the expiration timestamp of a tokenId*/\n  function getExpiry(uint256 _tokenId) external view returns(uint256)\n\n  /** Get the availability of a particular name */\n  function available(uint256 _tokenId) external view returns(bool)\n\n  /** Mint a name. */\n  /**@require name (tokenId) to be available. */\n  /**@require caller to be a registered controller. */\n  function register(uint256 _tokenId, address owner, uint256 duration) external onlyControllers returns(uint256)\n\n  /** Reclaim a name. Useful in case of a name transferred to a contract. */\n  /**@require msg.sender to be an approved user or owner of the tokenId. */\n  function reclaim(uint256 _tokenId) external returns(uint256)\n}\n")),(0,o.kt)("p",null,"The community name can be transferred and acquired just like normal ERC-721s. Similarly, users will interact with this contract in order to renew, transfer ownership, get expiration dates, name availability, etc."),(0,o.kt)("p",null,"For initial registration and for renewals, users will need to interact with a controller contract via commit/reveal process to prevent frontrunning. The separation of the controller and the main registrar is a common pattern used by many protocols to reduce the attack surface, thus granting the users continual ownership as long as the registrar is in place."),(0,o.kt)("p",null,"Initially, a single controller is implemented, the ",(0,o.kt)("inlineCode",{parentName:"p"},"BebGenesisController"),". The ability to add and remove controllers is crucial in implementing future upgrades and controller contracts. The B\u039eB DAO will eventually vote on controller-related changes."),(0,o.kt)("h2",{id:"b\u03beb-names"},"B\u039eB Names"),(0,o.kt)("p",null,"Registration of human-readable community names is a critical feature of the B\u039eB Community Protocol, making NFTCs have an optional B\u039eB Name, accessible by a B\u039eB client through ",(0,o.kt)("inlineCode",{parentName:"p"},"[name].client.xyz")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"[name].beb"),". If a B\u039eB NFTC does not have a name, it is ",(0,o.kt)("inlineCode",{parentName:"p"},"client.xyz/[contractAddress]/[tokenId]")," by default. Note that a B\u039eB Name is blockchain agnostic, the communities aren't branded by a specific chain protocol, rather the B\u039eB protocol itself."),(0,o.kt)("h2",{id:"b\u03beb-name-leasing"},"B\u039eB Name Leasing"),(0,o.kt)("p",null,"To discourage community squatting, we design B\u039eB NFTC Names to be leasable, which means they are controlled by the B\u039eB Registrar. Shorter names will have a higher name mint and yearly renewal. Price is computed by an oracle, with a rate to mint, and a rate per year to lease."))}d.isMDXComponent=!0}}]);